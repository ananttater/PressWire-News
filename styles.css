@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500;600&family=Roboto:wght@400;500&display=swap');

/* Available Fonts */
/* font-family: 'Poppins', sans-serif; */
/* font-family: 'Roboto', sans-serif; */

/* Universal Selector */
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

/* The :root CSS pseudo-class matches the root element of a tree 
representing the document */
:root{
    --primary-text-color: black;
    --secondery-text-color: rgb(99, 97, 97);
    --accent-color: red;
    --accent-color-dark: #bf0000;
}

body{
    font-family: 'Poppins', sans-serif;
    color: var(--primary-text-color);
}

p{
    font-family: 'Poppins', sans-serif;
    color: var(--secondery-text-color);
    line-height: 1.4rem;
}

a{
    text-decoration: none;
}

ul{
    list-style: none;
}

.flex{
    display: flex;
    align-items: center;
}

.container{
    max-width: 1180px;
    margin-inline: auto;
    overflow: hidden;
}

nav{
    background-color: black;
    box-shadow: 0 0 4px gray;
    position: fixed;
    top: 0;
    z-index: 99;
    left: 0;
    right: 0;
}

.main-nav{
    justify-content: space-between;
    padding: 10px 0px 6px;
}

.company-logo img{
    width: 200px;
}

.nav-links ul{
    color: white;
    gap: 30px;
    font-size: 1.2rem;
}

.hover-link{
    cursor: pointer;
}

.hover-link:hover{
    color: var(--accent-color);
    font-weight: 900;
}

.hover-link:active{
    color: grey;
}

.search-bar{
    height: 32px;
    gap: 8px;
}

.search-input{
    font-family: 'Roboto', sans-serif;
    width: 200px;
    height: 100%;
    padding-inline: 12px;
    border: 2px solid;
    border-radius: 8px;
}

.search-button{
    font-family: 'Roboto', sans-serif;
    color: white;
    background-color: red;
    border-color: white;
    padding: 8px 10px;
    border-radius: 8px;
    font-size: 1rem;
}

.search-button:hover{
    background-color: var(--accent-color-dark);
}   

main{
    padding-block: 20px;
    margin-top: 80px;
}

.cards-container{
    justify-content: space-between;
    flex-wrap: wrap;
    row-gap: 20px;
    align-items: start;
}

.card{
    width: 350px;
    min-height: 400px;
    max-height: 550px;
    box-shadow: 0 0 4px black;
    border-radius: 4px;
    cursor: pointer;
    background-color: white;
    overflow: hidden;
    transition: all 0.3s;
    z-index: 1;
    margin-bottom: 10px;
    border-bottom: 3px solid red;
}

.card:hover{
    box-shadow: 1px 1px 8px black;
    /* background-color: grey; */
    /* color: white; */
    transform: translateY(-2px);
}

.card-header img{
    width: 100%;
    height: 180px;
    object-fit: cover;
}

.card-content{
    /* border: 15px solid white; */
    padding: 12px;
}

.news-source{
    margin-block: 12px;
}

.active{
    color: red;
}


/*
https://developer.mozilla.org/en-US/docs/Web/CSS/cursor

The cursor CSS property sets the mouse cursor, if any, to show when 
the mouse pointer is over an element. 
*/


/*
https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline

The padding-inline CSS shorthand property defines the logical 
inline start and end padding of an element, which maps to physical 
padding properties depending on the element's writing mode, 
directionality, and text orientation.
*/

/*
https://developer.mozilla.org/en-US/docs/Web/CSS/overflow

The overflow CSS shorthand property sets the desired behavior when 
content does not fit in the parent element box (overflows) in the 
horizontal and/or vertical direction.
*/

/*
https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow

The box-shadow CSS property adds shadow effects around an element's 
frame. You can set multiple effects separated by commas. A box 
shadow is described by X and Y offsets relative to the element, 
blur and spread radius, and color.
*/

/*
https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_transitions/Using_CSS_transitions

CSS transitions provide a way to control animation speed when changing 
CSS properties. Instead of having property changes take effect 
immediately, you can cause the changes in a property to take place 
over a period of time. For example, if you change the color of an 
element from white to black, usually the change is instantaneous. 
With CSS transitions enabled, changes occur at time intervals that 
follow an acceleration curve, all of which can be customized.
*/

/*
https://developer.mozilla.org/en-US/docs/Web/CSS/transform

The transform CSS property lets you rotate, scale, skew, or translate 
an element. It modifies the coordinate space of the CSS visual 
formatting model.
*/

/*
https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit

The object-fit CSS property sets how the content of a replaced element, 
such as an <img> or <video>, should be resized to fit its container.

You can alter the alignment of the replaced element's content object 
within the element's box using the object-position property.
*/


